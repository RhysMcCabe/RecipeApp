@page "/"
@using System.ComponentModel.DataAnnotations;
@inject HttpClient Http

<PageTitle>Index</PageTitle>

@if (recipes == null)
{
    <p><em>Loading data...</em></p>
}
else
{
    <div class="container text-white h-100">
        <div class="text-center  row">
            <h1>Find a recipe</h1>

        </div>
        
        <div class="container py-4">
            <h3>Add ingredients</h3>
            <div class="row">
                <div class="col-6">
                    <input @bind="ingredient" @onkeydown="@Enter" type="text" class="form-control" placeholder="carrots...cheese..." aria-label="Ingredients" aria-describedby="basic-addon2">
                </div>
                <div class="col-1">
                    <button @onclick="addIngredient" type="button" class="btn btn-outline-primary">Add</button>
                </div>
                @if(inputIngredients.Count !=0){
                    <div class="col-1">
                            <button @onclick="ClearIngredients" class="btn btn-outline-secondary">Clear</button>

                        </div>
                }

            </div>
        </div>


        <div class="container">
            <div class="text-dark row">
                @if (inputIngredients.Count != 0)
                {
                    @foreach (string i in inputIngredients)
                    {
                        <div class="col-1">
                            <button @onclick="()=>removeIngredient(i)" class="text-center btn btn-outline-danger rounded-3">
                                <span>@i</span>
                            </button>

                        </div>

                    }
                    <div class="row mt-5">
                        <button @onclick="GetRecipes" class="btn btn-outline-success">Search</button>

                    </div>
                            
                }

                        

            </div>
           
            
        </div>


        <div class="container-fluid content-row">
            @if(recipes != null){
                <div class="row mt-3">
                
            @foreach (var recipe in recipes.results)
            {
                <div class="col-3 mt-3 pb-2">

                <div class="card bg-secondary h-100  text-white p-2" style="width: 18rem;">
                    <img class="text-center rounded" src="@recipe.image" alt="Card image cap">
                    <div class="card-body">
                        <p class="card-text">@recipe.title</p>
                    </div>
                </div>
                    </div>
            }
                </div>
               
            }
        </div>
            
        
            


    </div>
}
@errorMessage



@code{
    private Recipes recipes;
    private string? ingredient;
    private List<string> inputIngredients = new List<string>();
    private string? errorMessage;

    private void addIngredient() {

        if (ingredient == "" || ingredient == null || ingredient.Contains(" ") || ingredient.Length>=20)
        {

            return;
        }
        ingredient = ingredient.ToLower();

        if (inputIngredients.Contains(ingredient))
        {
            return;
        }

        inputIngredients.Add(ingredient);
        ingredient = "";



    }

    private void removeIngredient(string i)
    {
        inputIngredients.Remove(i);

    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            addIngredient();
        }
    }

    protected async Task ClearIngredients(){
        inputIngredients.Clear();
    }

    protected async Task ClearRecipes()
    {
        recipes.results.Clear();
    }

    protected async Task GetRecipes(){
        try
        {
            await ClearRecipes();
            string query = "";

            foreach(string i in inputIngredients){
                query += $"{i},+";
            }
            string url = $"https://api.spoonacular.com/recipes/complexSearch?query={query}&number=16&apiKey=a40d131d82774277bd6d8971e51266ef";
            Console.WriteLine(url);

      
            recipes = await Http.GetFromJsonAsync<Recipes>(url);

        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }

    }



    // lifecycle method
    protected override async Task OnInitializedAsync()
    {

        try
        {
            // CORS needs to be enabled for Web API endpoint
            recipes = await Http.GetFromJsonAsync<Recipes>($"https://api.spoonacular.com/recipes/complexSearch?query={ingredient}?number=4&apiKey=a40d131d82774277bd6d8971e51266ef");

        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }

    }

 
   
    public class Result
    {
        public int id { get; set; }
        public string title { get; set; }
        public string image { get; set; }
        public string imageType { get; set; }
    }

    public class Recipes
    {
        public List<Result> results { get; set; }
        public int offset { get; set; }
        public int number { get; set; }
        public int totalResults { get; set; }
    }



    

}